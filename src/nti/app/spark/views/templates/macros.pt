<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Strict//EN"
	 "http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd">
<html xmlns="http://www.w3.org/1999/xhtml"
	  xmlns:metal="http://xml.zope.org/namespaces/metal"
	  xmlns:tal="http://xml.zope.org/namespaces/tal">
<head metal:define-macro="mathplacement_head">
	<meta http-equiv="content-type" content="text/html; charset=utf-8" />
	<title metal:define-slot="title"></title>

	<!-- Latest compiled and minified CSS -->
	<link rel="stylesheet" href="https://maxcdn.bootstrapcdn.com/bootstrap/3.3.7/css/bootstrap.min.css">
	<link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/bootstrap-datetimepicker/4.17.47/css/bootstrap-datetimepicker.min.css">
	<link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/bootstrap-validator/0.5.3/css/bootstrapValidator.min.css">

	<script src="https://cdnjs.cloudflare.com/ajax/libs/moment.js/2.18.1/moment.min.js"></script>
	<script src="https://cdnjs.cloudflare.com/ajax/libs/moment-timezone/0.5.13/moment-timezone-with-data.min.js"></script>

	<!-- jQuery library -->
	<script src="https://ajax.googleapis.com/ajax/libs/jquery/3.2.1/jquery.min.js"></script>
	<!-- Latest compiled JavaScript -->
	<script src="https://maxcdn.bootstrapcdn.com/bootstrap/3.3.7/js/bootstrap.min.js"></script>

	<!--put this js at the end of others -->
	<script src="https://cdnjs.cloudflare.com/ajax/libs/bootstrap-datetimepicker/4.17.47/js/bootstrap-datetimepicker.min.js"></script>
	<script src="https://cdnjs.cloudflare.com/ajax/libs/bootstrap-validator/0.5.3/js/bootstrapValidator.min.js"></script>

	<script type="text/javascript">
		function totimestamp(strDate){
			//strDate must be yyyy-mm-dd hh:mm:ss, can't be mm/dd/yyyy
			var cst = moment.tz(strDate, "America/Chicago");
			return moment.utc(cst).valueOf()/1000;
		}
	</script>

	<style>
		body {
			padding-top: 60px;
		}
		.has-success .control-label{
			color: #555;
		}
		.has-success .form-control{
			color: #555;
			border: 1px solid #ccc;
			-webkit-box-shadow: inset 0 1px 1px rgba(0, 0, 0, .075);
					box-shadow: inset 0 1px 1px rgba(0, 0, 0, .075);
			-webkit-transition: border-color ease-in-out .15s, -webkit-box-shadow ease-in-out .15s;
				 -o-transition: border-color ease-in-out .15s, box-shadow ease-in-out .15s;
					transition: border-color ease-in-out .15s, box-shadow ease-in-out .15s;
		}
		.has-success .form-control:focus {
			border-color: #66afe9;
			outline: 0;
			-webkit-box-shadow: inset 0 1px 1px rgba(0,0,0,.075), 0 0 8px rgba(102, 175, 233, .6);
			box-shadow: inset 0 1px 1px rgba(0,0,0,.075), 0 0 8px rgba(102, 175, 233, .6);
		}
	</style>

</head>
<body>
	<script type="text/javascript" metal:define-macro="task_script">
		function wait (milli) {
   			return new Promise(t => setTimeout(t, milli));
		}

		async function poll (url) {

			const req = await fetch(url, {
				credentials: 'same-origin',
				headers: {
					'X-Requested-With': 'XMLHttpRequest'
				}  
    		});

   			if (!req.ok) {
				throw req;
			}

			const data = await req.json();

			if (data.status === 'Success') {
				return data;
			}

			if (data.status === 'Failed') {
				throw data.jobId;
			}

			await wait(5000);

			return await poll(url);
		}
		
		async function json_get (url) {

			const req = await fetch(url, {
				credentials: 'same-origin',
				headers: {
					'X-Requested-With': 'XMLHttpRequest'
				}  
    		});

   			if (!req.ok) {
				throw req;
			}

			const data = await req.json();
			return data;
		}
	</script>
</body>
</html>
